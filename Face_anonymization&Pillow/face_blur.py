# -*- coding: utf-8 -*-
"""Face_blur.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R02GLIkBi_qIKDoQI1vJU1WpNTc2x0Wz
"""

import cv2
import mediapipe as mp
import os

# Folder path for output data (images)
output_dir1 = '/content/drive/MyDrive/Colab Notebooks/Computer Vision/Face_anonymization_/output'

# Create the folder if it does not exist
os.makedirs(output_dir1, exist_ok=True)

# Path to the image
img_path = '/content/drive/MyDrive/Colab Notebooks/Computer Vision/Face_anonymization_/person.jpg'
img = cv2.imread(img_path)


# Condition to verify that the process is proceeding correctly
if img is None:
    print(f"Failed to load image at {img_path}")
else:
    H, W, _ = img.shape

    # Code for detecting faces
    mp_face_detection = mp.solutions.face_detection
    with mp_face_detection.FaceDetection(model_selection=0, min_detection_confidence=0.5) as face_detection:
        img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        out = face_detection.process(img_rgb)

        # Code to create bounding boxes for face detection
        if out.detections is not None:
            for detection in out.detections:
                location_data = detection.location_data
                bbox = location_data.relative_bounding_box

                x1, y1, w, h = bbox.xmin, bbox.ymin, bbox.width, bbox.height
                x1 = int(x1 * W)
                y1 = int(y1 * H)
                w = int(w * W)
                h = int(h * H)

               # Blur the area within the bounding box
                img[y1:y1+h, x1:x1+w] = cv2.blur(img[y1:y1+h, x1:x1+w], (5, 5))


        output_path1 = os.path.join(output_dir1, 'person_blur.jpg')


        if cv2.imwrite(output_path1, img):
            print(f"Image successfully saved at {output_path1}")
        else:
            print("Failed to save image.")